# Generated by Django 4.2.13 on 2025-09-30 17:42

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Checkup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "plot",
                    models.CharField(
                        choices=[
                            ("a12_sokolniki", "А-12, Сокольники"),
                            ("b3_troitsk", "Б-3, Троицкий лес"),
                            ("c7_tsaritsyno", "С-7, Царицыно"),
                            ("d5_botanic", "D-5, Ботанический сад"),
                        ],
                        max_length=64,
                        verbose_name="Участок",
                    ),
                ),
                ("report_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидание"),
                            ("in_progress", "В процессе"),
                            ("completed", "Завершено"),
                            ("error", "Ошибка"),
                            ("cancelled", "Отменено"),
                        ],
                        default="pending",
                        max_length=32,
                    ),
                ),
                ("comment", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="CheckupPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("photo", models.ImageField(upload_to="checkups/originals")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "checkup",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="core.checkup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CheckupPhotoObject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "annotated_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="checkups/annotated"
                    ),
                ),
                (
                    "bbox",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(), size=4
                    ),
                ),
                (
                    "object_type",
                    models.CharField(
                        choices=[("tree", "Tree"), ("shrub", "Shrub")], max_length=16
                    ),
                ),
                (
                    "breed",
                    models.CharField(
                        choices=[
                            ("unknown", "Не определено"),
                            ("oak", "Дуб"),
                            ("ash", "Ясень"),
                            ("poplar", "Тополь"),
                            ("pine", "Сосна"),
                            ("birch", "Берёза"),
                            ("elm", "Вяз"),
                            ("maple", "Клён"),
                            ("spruce", "Ель"),
                        ],
                        default="unknown",
                        max_length=32,
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("normal", "Нормальное"),
                            ("falling", "Заваливающееся"),
                            ("fallen", "Упавшее"),
                            ("emergency", "Аварийное"),
                            ("unsatisfactory", "Не удовлетворительное"),
                            ("stump", "Пенёк"),
                        ],
                        default="normal",
                        max_length=32,
                    ),
                ),
                ("is_dry", models.BooleanField(default=False)),
                ("percentage_dried", models.PositiveSmallIntegerField(default=0)),
                (
                    "artifacts",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("crack", "Трещина"),
                                ("hollow", "Дупло"),
                                ("bark_removed", "Содранная кора"),
                                ("roots_exposed", "Обнажены корни"),
                                ("fungi", "Грибы"),
                                ("rot", "Гниль"),
                                ("stem_damage", "Повреждение ствола"),
                                ("crown_damage", "Повреждение кроны"),
                                ("broken_branches", "Обломанные ветки"),
                                ("broken_trunk", "Сломанный ствол"),
                            ],
                            max_length=32,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "season",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("vegetative", "Вегетативный"),
                            ("non_vegetative", "Не вегетативный"),
                        ],
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "photo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="objects",
                        to="core.checkupphoto",
                    ),
                ),
            ],
        ),
    ]
