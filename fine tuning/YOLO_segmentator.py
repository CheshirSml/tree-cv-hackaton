"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ YOLO11-seg
–∏ —ç–∫—Å–ø–æ—Ä—Ç –≤ —Ñ–æ—Ä–º–∞—Ç COCO –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤ CVAT (Computer Vision Annotation Tool).

–û–ø–∏—Å–∞–Ω–∏–µ:
    –°–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥–µ–ª—å —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ YOLOv8 –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–∑–º–µ—Ç–∫–∏ –Ω–∞–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
    –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç bounding boxes –∏ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–∞—Å–∫–∏.
    –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—Ç—Å—è –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç COCO (Common Objects in Context),
    –≤–∫–ª—é—á–∞—è:
      - —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π,
      - –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Å –ø–æ–ª–∏–≥–æ–Ω–∞–º–∏ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ bounding boxes,
      - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∫–ª–∞—Å—Å—ã) –æ–±—ä–µ–∫—Ç–æ–≤.

    –ü–æ–ª—É—á–µ–Ω–Ω—ã–π JSON-—Ñ–∞–π–ª –∏ –∫–æ–ø–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é,
    —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç–∞—Å–µ—Ç –≤ CVAT –∫–∞–∫ "auto-annotated" –ø—Ä–æ–µ–∫—Ç.

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
    - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±—Ä–µ–∑–∞–Ω–Ω—ã—Ö (truncated) –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–ª–∞–≥–æ–¥–∞—Ä—è `ImageFile.LOAD_TRUNCATED_IMAGES = True`.
    - –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª–∏–≥–æ–Ω—ã –∏–∑ `result.masks.xyn`, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–Ω–æ—Ä–º–∞–ª–∏–∑—É—é—Ç—Å—è
      –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    - Bounding boxes –±–µ—Ä—É—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –º–æ–¥–µ–ª–∏ (`result.boxes`).
    - –ü—Ä–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Å–µ–≥–º–µ–Ω—Ç—ã —Å –º–µ–Ω–µ–µ —á–µ–º 3 —Ç–æ—á–∫–∞–º–∏ (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–æ–ª–∏–≥–æ–Ω—ã).
    - –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –≤ –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏–º–ø–æ—Ä—Ç–∞ –≤ CVAT.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç `ultralytics`.
    - –ü—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ (.pt), –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è –º–∞—Å–∫–∏.
    - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö JPG/JPEG –∏–ª–∏ PNG.

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ã—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:
    cvat_dataset/
    ‚îú‚îÄ‚îÄ auto_annotations.json   # —Ä–∞–∑–º–µ—Ç–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ COCO
    ‚îú‚îÄ‚îÄ image1.jpg
    ‚îú‚îÄ‚îÄ image2.png
    ‚îî‚îÄ‚îÄ ...

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    1. –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –º–æ–¥–µ–ª–∏ (`best.pt`).
    2. –£–∫–∞–∂–∏—Ç–µ –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏.
    3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç.
    4. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –ø–∞–ø–∫—É `cvat_dataset` –≤ CVAT –∫–∞–∫ –Ω–æ–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:
    - –§–æ—Ä–º–∞—Ç COCO, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã–π —Å–∫—Ä–∏–ø—Ç–æ–º, —Å–æ–≤–º–µ—Å—Ç–∏–º —Å CVAT –Ω–∞—á–∏–Ω–∞—è —Å –≤–µ—Ä—Å–∏–∏ 2.0+.
    - –ü–æ–ª–∏–≥–æ–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∫–∞–∫ –µ–¥–∏–Ω—ã–π –∫–æ–Ω—Ç—É—Ä (–±–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ—Ç–≤–µ—Ä—Å—Ç–∏–π).
    - –ü–∞—Ä–∞–º–µ—Ç—Ä `iscrowd=0` —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≥—Ä—É–ø–ø–æ–π –æ–±—ä–µ–∫—Ç–æ–≤.
"""

from PIL import ImageFile
ImageFile.LOAD_TRUNCATED_IMAGES = True  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–µ/–æ–±—Ä—ã–≤–æ—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

from ultralytics import YOLO
import os
from pathlib import Path
import json
from tqdm import tqdm
import shutil

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
# –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ YOLOv8
model = YOLO('runs/segment/tree_detector2/weights/best.pt')

# –ü–∞–ø–∫–∞ —Å –Ω–æ–≤—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–∑–º–µ—Ç–∫–∏
images_dir = Path('–°–∞–Ω–∏—Ç–∞—Ä–∫–∞/2')
# –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –¥–∞—Ç–∞—Å–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–∏–≥–æ–¥–Ω–æ–º –¥–ª—è CVAT
output_dir = Path('cvat_dataset/')
output_dir.mkdir(exist_ok=True)

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ .jpg, .jpeg, .png –≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ)
image_files = (
    list(images_dir.glob('*.[jJ][pP][gG]')) +
    list(images_dir.glob('*.[jJ][pP][eE][gG]')) +
    list(images_dir.glob('*.[pP][nN][gG]'))
)

# –í—ã–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–µ—Ä–µ–Ω—Å –º–æ–¥–µ–ª—å—é
print("–ó–∞–ø—É—Å–∫ –º–æ–¥–µ–ª–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–∑–º–µ—Ç–∫–∏...")
results = model(image_files, stream=False)  # stream=False ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–º—è—Ç—å —Å—Ä–∞–∑—É

# === –§–û–†–ú–ò–†–û–í–ê–ù–ò–ï –î–ê–¢–ê–°–ï–¢–ê –í –§–û–†–ú–ê–¢–ï COCO ===
coco = {
    "images": [],
    "annotations": [],
    "categories": [],
    "licenses": [],
    "info": {"description": "Auto-labeled by YOLOv8-seg"}
}

# –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–∫–ª–∞—Å—Å—ã) –∏–∑ –º–æ–¥–µ–ª–∏
for cls_id, cls_name in model.names.items():
    coco["categories"].append({
        "id": cls_id,
        "name": cls_name,
        "supercategory": "object"
    })

annotation_id = 1  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–∞–∂–¥–æ–π –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
for result in tqdm(results, total=len(image_files), desc="–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"):
    img_path = Path(result.path)
    img_name = img_path.name
    img_w, img_h = result.orig_shape[1], result.orig_shape[0]  # —à–∏—Ä–∏–Ω–∞, –≤—ã—Å–æ—Ç–∞

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ COCO
    image_id = len(coco["images"]) + 1
    coco["images"].append({
        "id": image_id,
        "file_name": img_name,
        "width": img_w,
        "height": img_h
    })

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–µ–∑ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –º–∞—Å–æ–∫
    if result.masks is None:
        continue

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ: bounding boxes, –∫–ª–∞—Å—Å—ã –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª–∏–≥–æ–Ω—ã
    boxes = result.boxes.xyxy.cpu().numpy()      # [x1, y1, x2, y2]
    classes = result.boxes.cls.cpu().numpy()     # [cls_id, ...]
    masks = result.masks.xyn                     # –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª–∏–≥–æ–Ω—ã: [[x1,y1,x2,y2,...], ...]

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –¥–µ—Ç–µ–∫—Ü–∏—é
    for i in range(len(boxes)):
        cls_id = int(classes[i])
        polygon_norm = masks[i].flatten()  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –ø–ª–æ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫: [x1, y1, x2, y2, ...]

        # –î–µ–Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª–∏–≥–æ–Ω–∞ –¥–æ –ø–∏–∫—Å–µ–ª–µ–π
        polygon = [
            int(coord * (img_w if j % 2 == 0 else img_h))
            for j, coord in enumerate(polygon_norm)
        ]

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª–∏–≥–æ–Ω—ã —Å –º–µ–Ω–µ–µ —á–µ–º 3 —Ç–æ—á–∫–∞–º–∏ (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ)
        if len(polygon) < 6:
            continue

        # –ò–∑–≤–ª–µ–∫–∞–µ–º bounding box –∏ –≤—ã—á–∏—Å–ª—è–µ–º –ø–ª–æ—â–∞–¥—å
        x_min, y_min, x_max, y_max = boxes[i]
        w, h = x_max - x_min, y_max - y_min

        # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é –≤ COCO-—Ñ–æ—Ä–º–∞—Ç
        coco["annotations"].append({
            "id": annotation_id,
            "image_id": image_id,
            "category_id": cls_id,
            "segmentation": [polygon],  # COCO –æ–∂–∏–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ (–¥–∞–∂–µ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞)
            "bbox": [int(x_min), int(y_min), int(w), int(h)],
            "area": int(w * h),
            "iscrowd": 0  # 0 = –æ–¥–∏–Ω–æ—á–Ω—ã–π –æ–±—ä–µ–∫—Ç, 1 = –≥—Ä—É–ø–ø–∞ (crowd)
        })
        annotation_id += 1

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –≤ JSON
with open(output_dir / "auto_annotations.json", "w", encoding='utf-8') as f:
    json.dump(coco, f, indent=2)

# –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
print("–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
for img in image_files:
    shutil.copy(img, output_dir / img.name)

print(f"‚úÖ –î–∞—Ç–∞—Å–µ—Ç –¥–ª—è CVAT —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: {output_dir.absolute()}")
print(f"üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(image_files)}")
print(f"üìä –í—Å–µ–≥–æ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω–æ: {len(coco['annotations'])}")